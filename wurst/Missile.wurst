package Missile

// Homing
// Adjust to beginning height and end height
// Create pitch etc.
// Add pointing


public interface MissileAction
    function run()


public class Missile

    private static let UPDATEFREQ = 0.01

    private angle direction

    private vec3 pos

    private vec3 velocity


    construct( vec3 originPos, vec3 targetPos, string sfx, real speed, real arc )
        /*
            Vx = Vo * cos(a)

            Vy = Vo * sin(a)

            Vo = Vx / cos(a)

            
            Vy = (Vx / cos(a)) * sin(a)

            formlen til den lodrette acceleration


        */



        
        let direction = originPos.angleTo2d(targetPos).radians()
        let actualSpeed = speed * UPDATEFREQ

        velocity = vec3( actualSpeed * Cos(direction),
                         actualSpeed * Sin(direction),
                         actualSpeed * Sin( PIHALF * arc )     )

        

    function addPeriodicAction(  )


    function addEndAction( MissileAction action )

 
    function getPos() returns vec2
        return pos.toVec2()

    function getPos3() returns vec3
        return pos




