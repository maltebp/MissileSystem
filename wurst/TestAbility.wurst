package TestAbility

import AbilityObjEditing
import ObjectIdGenerator
import RegisterEvents
import Missile
import Assets
import CustomProjectile
import MyMissile


public let TESTABILITY_POINT = compiletime( ABIL_ID_GEN.next() )
public let TESTABILITY_UNIT = compiletime( ABIL_ID_GEN.next() )


init
    registerSpellEffectEvent( TESTABILITY_POINT ) ->
        let target = vec2( GetSpellTargetX(), GetSpellTargetY() ).withTerrainZ()
        let origin = GetSpellAbilityUnit().getPos3Real()
        
        //new MyMissile(origin, target, 500, 1500, Abilities.bloodElfMissile )
        let missile = new Missile( origin, target, Abilities.wyvernSpearMissile, 500, 1 )


    registerSpellEffectEvent( TESTABILITY_UNIT ) ->
        let target = GetSpellTargetUnit()
        let origin = GetSpellAbilityUnit().getPos3with(0)
        
        let missile = new Missile( target, origin, Abilities.wyvernSpearMissile, 500, 1 )


@compiletime
function createAbility()
    
    new AbilityDefinitionCarrionSwarmcreep( TESTABILITY_POINT )
    ..setAnimationNames("attack")
    ..setMissileArt("")
    ..setTargetsAllowed(1, "none")
    ..setCastRange(1, 10000)
    ..setDistance(1, 0)
    ..setManaCost(1, 0)
    ..setCooldown(1, 0)
    ..setName("Missile")
    ..setTooltipNormal(1, "Missile")
    ..setIconNormal(Icons.bTNClusterRockets)

    new AbilityDefinitionFingerofDeath(TESTABILITY_UNIT)
    ..setHeroAbility(false)
    ..setArtTarget("")
    ..setLightningEffects("")
    ..setAnimationNames("attack")
    ..setMissileArt("")
    ..setTargetsAllowed(1, "ground,hero,nonhero")
    ..setCastRange(1, 10000)
    ..setManaCost(1, 0)
    ..setCooldown(1, 0)
    ..setName("Missile")
    ..setTooltipNormal(1, "Missile")
    ..setDamage(1, 0)
    ..setIconNormal(Icons.bTNClusterRockets)



